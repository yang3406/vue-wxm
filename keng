Angular,react,vue三大框架的区别:
一:
Angular有较强的排他性,是强主张的,必须使用它的规范:
1:使用它的模块机制
2:使用它的依赖注入
3:使用特殊形式定义组件(三大模块都是如此)
二:
react主张是函数式编程.比如说，你需要知道什么是副作用，什么是纯函数，
如何隔离副作用。它的侵入性看似没有Angular那么强，主要因为它是软性侵入。
那么什么是函数式编程,什么是命令式编程呢？
函数式编程关心的数据的映射,命令式编程关心解决问题的步骤。
比起命令式编程，函数式编程更加强调程序执行的结果而非执行的过程，
倡导利用若干简单的执行单元让计算结果不断渐进，逐层推导复杂的运算，而不是设计一个复杂的执行过程。
函数式编程，无副作用，写出来的代码没有bug，这是真理没错，但是有两个问题需要考虑：
1. JS本身，有太多特性与纯函数式的主张不适配，这一点，题叶能说得更多
2. 业务系统里面的实体关系，如何组织业务逻辑，几十年来积累了无数的基于设计模式的场景经验，
有太多的东西可以模仿，但是，没有人给你总结那么多如何把你的厚重业务映射到函数式理念的经验，
这个地方很考验综合水平的，真的每个人都有能力去做这种映射吗？
三:
Vue是自下向上的渐进式框架 易于和第三方库和已有的项目融合
什么是渐进式?
没有强主张,你可以在原有大系统的上面，把一两个组件改用它实现，当jQuery用；
也可以整个用它全家桶开发，当Angular用；还可以用它的视图，搭配你自己设计的整个下层用。
你可以在底层数据逻辑的地方用OO和设计模式的那套理念，也可以函数式，都可以，
它只是个轻量视图而已，只做了自己该做的事，没有做不该做的事，仅此而已。渐进式的含义，
我的理解是：没有多做职责之外的事。



好坑吖
如果启动项目时总是报少包 请把node_modules目录删除 重新 cnpm install


第一个坑
在new VueRouter()把routes写为routers了 哭哭哭


第二个坑
import 'src/plugins/swiper.min.js'
报Cannot assign to read only property 'exports' of object '#<Object>'
解决 把.babelrc里的
"plugins": ["transform-vue-jsx", "transform-runtime"],
改为
"plugins": []


第三个坑
引入图片后 图片显示不了 swiper
原因是 url-loader无法解析js动态生成的路径。 配置在webpack.base.conf.js里面
解决 把图片文件放入 static目录下面 即可
还有一种是img(url) 地址的 放在外面也行 但是地址要/static
放在里面的话 地址就是相对于当前.vue的地址





